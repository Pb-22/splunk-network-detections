index=<your_index> sourcetype=<your_sourcetype> NOT dest_ip IN ("10.0.0.0/8","172.16.0.0/12","192.168.0.0/16", "169.254.0.0/16", ```add more IPs or networks to ignore here```) NOT service=* transport=tcp
| where (len(history) <=3 )
| where orig_bytes < 200 AND resp_bytes < 200
| stats count, values(dest_port) as dest_port values(history) as history sum(orig_bytes) as sum_orig_bytes sum(resp_bytes) as sum_resp_bytes sum(duration) as sum_duration by src_ip dest_ip
| where count >3 ``` adjust as needed: raise this to reduce results```
| eval dest_port_count=mvcount(dest_port)
| where dest_port_count < 5 ```adjust to reduce large rows taking up the page ```
| sort - count
| eval is_oddport=if(match(dest_port,"^(80|443|22|25|53|110|143)$"),"no","yes")
| eval is_longconn=if(sum_duration > 7200, "yes", "no") ```tune duration threshold```
| eval is_high_count=if(count > 504, "yes", "no") ```tune count threshold```
| eval bytes_per_count=round((sum_orig_bytes + sum_resp_bytes) / count, 1)
| eventstats dc(dest_ip) as unique_dests by src_ip
| eval is_multidest=if(unique_dests > 3, "yes", "no") ```tune dest IP count threshold```
| eval oddport_score=case(match(dest_port,"^(80|443|22|25|53|110|143)$"),0, tonumber(dest_port) > 1024,2, true(),1)
| eval longconn_score=if(is_longconn="yes" AND is_high_count="no", 3, if(is_longconn="yes", 1, 0))
| eval highcount_score=if(is_high_count="yes", 2, 0)
| eval multidest_score=if(is_multidest="yes", 1, 0)
| eval lowbytes_score=if(bytes_per_count < 20 AND is_high_count="yes", 2, if(bytes_per_count < 20, 1, 0)) ```tune bytes per count threshold```
| eval risk_score=oddport_score + longconn_score + highcount_score + multidest_score + lowbytes_score
| fields src_ip dest_ip dest_port count unique_dests sum_orig_bytes sum_resp_bytes sum_duration is_oddport is_longconn is_high_count is_multidest bytes_per_count risk_score
| search risk_score > 5 ```tune risk score threshold```
| sort - risk_score - duration